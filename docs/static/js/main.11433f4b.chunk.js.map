{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","e","target","name","value","LoginScreen","login_Email","login_Password","formLoginValues","handleLoginInputChange","register_Name","register_Email","register_Password1","register_Password2","formRegisterValues","handleRegisterInputChange","dispatch","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpendModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus_1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","titleValid","setTitleValid","formValues","setFormValues","startDate","endDate","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","children","isAuthenticated","to","PublicRoute","AppRouter","checking","path","element","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11433f4b.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_BACKEND_API_URL\r\n\r\n\r\n//para peticiones al backend en donde NO necesito el JWT para las recivir la info\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`  //localhost:4000/api/......\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n//para peticiones al backend en donde NECESITO el JWT para las recivir la info\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`  //localhost:4000/api/......\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchConToken,\r\n    fetchSinToken\r\n}","export const types= {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n    \r\n    eventStartAddNew: '[Event] Start add new',\r\n    eventAddNew: '[Event] Add new',\r\n    eventSetActive: '[Event] Set active',\r\n    eventClearActiveEvent: '[Event] Clear Active Event',\r\n    eventUpdate: '[Event] Event updated',\r\n    eventDeleted: '[Event] Event deleted',\r\n    eventLoaded: '[Event] Events Loaded',\r\n    eventLogout: '[Event] Logout',\r\n\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    // authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    // authStartRegister: '[auth] Start Register',\r\n    // authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n    \r\n\r\n\r\n}","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n//LOGEAR AL USUARIO\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime()) //para saber a la hora q comenzo a usarse el token, para si conozco el tiempo de expiracion, poder saber cuando este token expira\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//REGISTRAR AL USUARIO\r\nexport const startRegister = (name, email, password) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime()) //para saber a la hora q comenzo a usarse el token, para si conozco el tiempo de expiracion, poder saber cuando este token expira\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//le doy un nuevo JWT al usuario\r\nexport const startChecking = () => {\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew')\r\n        const body = await resp.json();\r\n\r\n        //si el usuario ya tenia JWT => body.ok = true, si el usuario no se le ha dado un token en startLogin() o startRegister, o el token caduco body.ok => false\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime()) //para saber a la hora q comenzo a usarse el token, para si conozco el tiempo de expiracion, poder saber cuando este token expira\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () => {\r\n    return {\r\n        type: types.authCheckingFinish\r\n    }\r\n}\r\n\r\nconst login = (user) => {\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n}\r\n\r\n\r\nexport const starLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: types.authLogout\r\n    }\r\n}","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n      setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n    \r\n        setValues({\r\n          ...values,\r\n         [e.target.name] : e.target.value\r\n        });\r\n    \r\n     }\r\n\r\n     return [values,handleInputChange,reset]; \r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        login_Email: '',\r\n        login_Password: ''\r\n    })\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        register_Name: '',\r\n        register_Email: '',\r\n        register_Password1: '',\r\n        register_Password2: ''\r\n    })\r\n\r\n    const { register_Name, register_Email, register_Password1, register_Password2} = formRegisterValues\r\n    const { login_Email, login_Password } = formLoginValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(login_Email, login_Password))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(register_Password1 !== register_Password2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales')\r\n        }\r\n\r\n        dispatch(startRegister(register_Name, register_Email, register_Password1))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='login_Email'\r\n                                value={login_Email}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='login_Password'\r\n                                value={login_Password}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='register_Name'\r\n                                value={register_Name}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='register_Email'\r\n                                value={register_Email}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='register_Password1'\r\n                                value={register_Password1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='register_Password2'\r\n                                value={register_Password2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map( event => ({\r\n        ...event,\r\n         end: moment(event.end).toDate(),\r\n         start: moment(event.start).toDate(),\r\n    }))\r\n\r\n}\r\n","import Swal from \"sweetalert2\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                    dispatch(eventAddNew(event))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n//accion se dipara unicamente guardo el nuevo evento en la db\r\nconst eventAddNew = (event) => {\r\n\r\n    return {\r\n        type: types.eventAddNew,\r\n        payload: {\r\n            event\r\n        },\r\n    }\r\n}\r\n\r\n\r\n//pone el evento en la variable activeEvent, si hay algo en activeEvent se muestra en pantalla\r\nexport const eventSetActive = (event) => {\r\n\r\n    return {\r\n        type: types.eventSetActive,\r\n        payload: {\r\n            event\r\n        },\r\n    }\r\n}\r\n\r\n//eliminar el activeEvent (), si no hay nada en activeEvent, desaparece la 2da pantalla\r\nexport const eventClearActiveEvent = () => {\r\n    return {\r\n        type: types.eventClearActiveEvent,\r\n    }\r\n}\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT')\r\n            const body = await resp.json() //la respuesta del fetch\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => {\r\n    return {\r\n        type: types.eventUpdate,\r\n        payload: {\r\n            event\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDeleted = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE')\r\n            const body = await resp.json() //la respuesta del fetch\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => {\r\n    return {\r\n        type: types.eventDeleted\r\n    }\r\n}\r\n\r\n//obtener los eventos de la DB\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events')\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos)\r\n\r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n\r\n\r\nexport const eventLogout = () => ({\r\n\r\n    type: types.eventLogout\r\n    \r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { starLogout } from '../../actions/auth'\r\nimport { eventLogout } from '../../actions/events'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(starLogout());\r\n        dispatch(eventLogout())\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n            className='btn btn-outline-danger'\r\n            onClick={handleLogout}\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i>\r\n                <span>  Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> --{ user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpendModal = () => {\r\n    return {\r\n        type: types.uiOpenModal,\r\n    }\r\n}\r\n\r\nexport const uiClosedModal = () => {\r\n    return {\r\n        type: types.uiCloseModal,\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Modal from 'react-modal';  //documentacion = http://reactcommunity.org/react-modal/\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport { uiClosedModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate  } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\n\r\n\r\n// Make sure to bind modal to your appElement\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); //hora actual 2:45:30. resultado de esta linea = 3:00:00\r\nconst nowPlus_1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(), // lo mismo que el new Date\r\n    end: nowPlus_1.toDate(),\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [titleValid, setTitleValid] = useState(true)\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n    const { notes, title, start: startDate, end: endDate } = formValues\r\n\r\n    useEffect(() => {\r\n        \r\n    \r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        }else{\r\n            setFormValues(initEvent) //al eliminar evento, los valores del formulario se reinician \r\n        }\r\n\r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n\r\n        dispatch(uiClosedModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment(startDate)\r\n        const momentEnd = moment(endDate)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if( activeEvent ){  //cuando se crea un nuevo evento el activeEvent = null. Si se presiona uno preexistente activeEvent = Object. si ya existe, se actualiza\r\n            dispatch(eventStartUpdate(formValues))\r\n        }else{\r\n\r\n            dispatch(eventStartAddNew({\r\n                ...formValues\r\n            }))\r\n\r\n        }\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen} //Boolean describing if the modal should be shown or not\r\n            // onAfterOpen={afterOpenModal} //Function that will be run after the modal has opened\r\n            onRequestClose={closeModal} //Function that will be run after the modal has closed (tocando afuera de la ventana)\r\n            style={customStyles}\r\n            closeTimeoutMS={200}  //Number indicating the milliseconds to wait before closingthe modal\r\n            className='modal'\r\n            overlayClassName='modal-fondo' //className to be applied to the overlay\r\n        >\r\n\r\n            {/* este html dentro de Modal, es todo el html de la ventana emergente */}\r\n\r\n            <h1> {activeEvent ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={startDate}\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={endDate}\r\n                        minDate={startDate}\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { uiOpendModal } from '../../actions/ui'\r\n\r\n//AddNewFab == add new floating action button\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpendModal())\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-primary fab'\r\n        onClick={handleClickNew}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {  eventStartDeleted } from '../../actions/events';\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(eventStartDeleted())\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-danger fab-danger'\r\n        onClick={handleDelete}\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar Event </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'  // Documentacion = https://jquense.github.io/react-big-calendar/examples/index.html#intro\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { uiOpendModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\n\r\nmoment.locale('es'); //poner las fechas en español\r\n\r\n// Setup the localizer by providing the moment\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')  //para que cuando recargue la pagina, se ponga el calendario en el ultimo \"view\" en el q estaba\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading())\r\n        \r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpendModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n\r\n        // console.log(e)\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n        const style = {\r\n            backgroundColor:  (uid === event.user._id) ?  '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}   //inicializa el calendario \r\n                events={events}    //lista de los eventos q se ponegan en el calendario \r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages} //messages used throughout the component, override to provide localizations\r\n                eventPropGetter={eventStyleGetter} ////regresa el estilo que le aplica a un evento en particular\r\n                onDoubleClickEvent={onDoubleClick} //Callback fired when a calendar event is clicked twice.\r\n                onSelectEvent={onSelectEvent} //Callback fired when a calendar event is selected.\r\n                onView={onViewChange} //Callback fired when the view (dia, semana, mes, agenda) value changes.\r\n                view={lastView} //The current view of the calendar.\r\n                onSelectSlot={onSelectSlot}//A callback fired when a date selection is made. Only fires when selectable is true\r\n                selectable={true}\r\n                components={{  //Customize how different sections of the calendar render by providing custom Components\r\n                    event: CalendarEvent   //como se ve el uno de los eventos en especifico\r\n                }}\r\n            />\r\n\r\n            <CalendarModal />\r\n\r\n            <AddNewFab />\r\n\r\n            {activeEvent && <DeleteEventFab />}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const PrivateRoute = ({children,isAuthenticated}) => {\r\n\r\n    return (\r\n       \r\n       isAuthenticated  //true\r\n       ? \r\n       children\r\n       :\r\n       <Navigate to='/login'/>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const PublicRoute = ({children, isAuthenticated}) => {\r\n\r\n\r\n    return (\r\n        \r\n        !isAuthenticated //false\r\n        ?\r\n        children\r\n        : \r\n        <Navigate to='/'/>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    Navigate\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    //El componente se renderiza cada vez q uno de los valores q estoy usando cambian, en este caso los del useSelector, \r\n    //entonces cuando en algun componente cambian estos valores, este componente se renderiza y como es el AppRouter = se recarga la pagina\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(startChecking()); //cada vez que recargo, le doy un nuevo JWT al usuario, si el usuario aun tiene un JWT y aun no ha caducado\r\n\r\n\r\n    }, [dispatch])  //cada vez q se recargue alguna de las paginas dentro de este router\r\n\r\n\r\n    if (checking) {\r\n        return (<h5>Cargando....</h5>)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n\r\n                <Routes>\r\n\r\n                    <Route path='/login' element={\r\n                        <PublicRoute isAuthenticated={uid}>\r\n                            <LoginScreen />\r\n                        </PublicRoute>\r\n                    } />\r\n                    <Route path='/' element={\r\n                        <PrivateRoute isAuthenticated={uid}>\r\n                            <CalendarScreen />\r\n                        </PrivateRoute>\r\n                    } />\r\n\r\n\r\n\r\n                    <Route path='/*' element={<Navigate to='/' />} />\r\n\r\n                </Routes>\r\n\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,  //cuando la app se recarga, esta variable es para mostrar la pantalla de carga\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n            case types.authCheckingFinish:\r\n\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n\r\n            case types.authLogout:\r\n                \r\n                return {\r\n                    checking: false,\r\n                }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","// import moment from 'moment'\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n        //     id: 'sdgdsf',\r\n        //     title: 'cumpleaños del jefe',\r\n        //     start: moment().toDate(), //lo mismo que poner un = new Date\r\n        //     end: moment().add(2, 'hours').toDate(),\r\n        //     notes: 'Comprar el pastel',\r\n        //     user: {\r\n        //         _id: '123',\r\n        //         name: 'Carlos'\r\n        //     }\r\n        // }\r\n\r\n\r\nconst initialState = {\r\n    events: [\r\n\r\n    ],\r\n    activeEvent: null,\r\n}\r\n\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload.event\r\n            };\r\n\r\n        case types.eventAddNew:\r\n\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload.event],\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event =>\r\n                    (event.id === action.payload.event.id)\r\n                        ? action.payload.event\r\n                        : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event =>\r\n                    (event.id !== state.activeEvent.id)  //regresa los eventos que NO estan activos \r\n                        && event\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n            case types.eventLoaded:\r\n\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n\r\n            case types.eventLogout:\r\n\r\n            return {\r\n                ...state,\r\n                events: []\r\n            };\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n\r\n            return{\r\n                ...state,\r\n                modalOpen:true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n\r\n            return{\r\n                ...state,\r\n                modalOpen:false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\n//combinacion de todos mis reducers (el de autenticacion, el del calendario y el del UI)\r\n\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import {createStore,applyMiddleware,compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducers } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore( \r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk))\r\n    ); ","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n           <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles/styles.scss'\r\n\r\nReactDOM.render(\r\n    <CalendarApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}